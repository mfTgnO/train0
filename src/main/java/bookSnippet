6.5.1. Making sense of the methods declared by Collector interface
We can now analyze one by one the five methods declared by the Collector interface. When we
do so, you’ll notice that each of the first four methods returns a function that will be invoked by
the collect method, whereas the fifth one, characteristics, provides a set of characteristics that’s
a list of hints used by the collect method itself to know which optimizations (for example,
parallelization) it’s allowed to employ while performing the reduction operation.
Making a new result container: the supplier method
The supplier method has to return a Supplier of an empty result—a parameterless function that
when invoked creates an instance of an empty accumulator used during the collection process.
Clearly, for a collector returning the accumulator itself as result, like our ToListCollector, this188
empty accumulator will also represent the result of the collection process when performed on an
empty stream. In our ToListCollector the supplier will then return an empty List as follows:
public Supplier<List<T>> supplier() {
return () -> new ArrayList<T>();
}
Note that you could also just pass a constructor reference:
public Supplier<List<T>> supplier() {
return ArrayList::new;
}