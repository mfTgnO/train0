Get POJO Instances or Beans from the IoC Container
Then, you can test the preceding components with the following Main class:
package com.apress.springrecipes.sequence;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
public class Main {
public static void main(String[] args) {
ApplicationContext context =
new AnnotationConfigApplicationContext("com.apress.springrecipes.sequence");
SequenceDao sequenceDao = context.getBean(SequenceDao.class);
System.out.println(sequenceDao.getNextValue("IT"));
System.out.println(sequenceDao.getNextValue("IT"));
}
}
2-2. Create POJOs by Invoking a Constructor
Problem
You want to create a POJO instance or bean in the Spring IoC container by invoking its constructor, which
is the most common and direct way of creating beans. It is equivalent to using the new operator to create
objects in Java.
Solution
Define a POJO class with a constructor or constructors. Next, create a Java config class to configure POJO
instance values with constructors for the Spring IoC container. Next, instantiate the Spring IoC container to
scan for Java classes with annotations. The POJO instances or bean instances become accessible to be put
together as part of an application.